@using BlazorApp.Models.Scale
@using System.ComponentModel.DataAnnotations
@implements IDialogContentComponent<ScaleCreateDto>

<EditForm Model="@Content" OnValidSubmit="@SaveAsync">
    <DataAnnotationsValidator />

    <FluentDialogHeader ShowDismiss="false">
        <FluentStack VerticalAlignment="VerticalAlignment.Center">
            <FluentIcon Value="@(new Icons.Regular.Size24.Save())" />
            <FluentLabel Typo="Typography.PaneHeader">
                @Dialog.Instance.Parameters.Title
            </FluentLabel>
        </FluentStack>
    </FluentDialogHeader>

    <FluentTextField Label="Name" @bind-Value="@Content.ScaleName">
        <ValidationMessage For="@(() => Content.ScaleName)" />
    </FluentTextField>

    <FluentTextField Label="Item Name" @bind-Value="@Content.ItemName">
        <ValidationMessage For="@(() => Content.ItemName)" />
    </FluentTextField>

    <FluentNumberField Label="SingleItemWeight" @bind-Value="@Content.SingleItemWeight">
        <ValidationMessage For="@(() => Content.SingleItemWeight)" />
    </FluentNumberField>

    <FluentCheckbox Label="Is Connected" @bind-Value="@Content.IsConnected" />

    <FluentDialogFooter>
        <FluentButton Type="ButtonType.Submit" Appearance="Appearance.Accent" IconStart="@(new Icons.Regular.Size20.Save())">Save</FluentButton>
        <FluentButton Appearance="Appearance.Neutral" OnClick="@CancelAsync">Cancel</FluentButton>
    </FluentDialogFooter>
</EditForm>

@code {
    [Parameter]
    public ScaleCreateDto Content { get; set; } = default!;

    [CascadingParameter]
    public FluentDialog Dialog { get; set; } = default!;

    private async Task SaveAsync()
    {
        await Dialog.CloseAsync(Content);
    }

    private async Task CancelAsync()
    {
        await Dialog.CancelAsync();
    }
}