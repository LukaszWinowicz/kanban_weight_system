@inherits LayoutComponentBase
@inject NavigationManager navigationManager

<FluentLayout>
    <FluentHeader>
    <div style="display: flex; justify-content: space-between; align-items: center; width: 100%;">
        <!-- Nazwa aplikacji po lewej stronie -->
        <div>
            WebAssemblyKERP
        </div>
        <!-- Powitanie użytkownika po prawej stronie -->
        <div>
            <AuthorizeView>
                <Authorized>
                    Hello, @context.User.Identity.Name (@context.User.Claims.FirstOrDefault(c => c.Type == "email")?.Value)
                </Authorized>
            </AuthorizeView>
        </div>
    </div>
</FluentHeader>
    <FluentStack Class="main" Orientation="Orientation.Horizontal" Width="100%">
        <NavMenu />
        <FluentBodyContent Class="body-content">
            <ErrorBoundary>
                <ChildContent>
                    <div class="content">
                        @Body
                    </div>
                </ChildContent>
                <ErrorContent Context="ex">
                    <div class="blazor-error-boundary">@ex.Message</div>
                </ErrorContent>
            </ErrorBoundary>
        </FluentBodyContent>
    </FluentStack>

@*     <AuthorizeView>
        <Authorized>
            Hello, @context.User.Identity.Name (@context.User.Claims.FirstOrDefault(c => c.Type == "email")?.Value)
        </Authorized>
    </AuthorizeView> *@

    <FluentFooter>
        <a href="https://www.fluentui-blazor.net" target="_blank">Documentation and demos</a>
        <FluentSpacer />
        <a href="https://learn.microsoft.com/en-us/aspnet/core/blazor" target="_blank">About Blazor</a>
    </FluentFooter>
</FluentLayout>

@code {
    private void SignOut()
    {
        navigationManager.NavigateToLogin("authentication/logout");
    }
}