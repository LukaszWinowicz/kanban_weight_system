@inject NavigationManager navigationManager

<div class="navmenu">
    <input type="checkbox" title="Menu expand/collapse toggle" id="navmenu-toggle" class="navmenu-icon" />
    <label for="navmenu-toggle" class="navmenu-icon"><FluentIcon Value="@(new Icons.Regular.Size20.Navigation())" Color="Color.Fill" /></label>
    <nav class="sitenav" aria-labelledby="main-menu">
        <FluentNavMenu Id="main-menu" Width="250" Collapsible="true" Title="Navigation menu" @bind-Expanded="expanded" CustomToggle="true">
             

            <AuthorizeView>
                <Authorized>
                    <FluentNavLink Href="/" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.Home())" IconColor="Color.Accent">Home</FluentNavLink>
                    <FluentNavLink Href="counter" Icon="@(new Icons.Regular.Size20.NumberSymbolSquare())" IconColor="Color.Accent">Counter</FluentNavLink>
                    <FluentNavLink Href="weather" Icon="@(new Icons.Regular.Size20.WeatherPartlyCloudyDay())" IconColor="Color.Accent">Weather</FluentNavLink>
                    <FluentNavLink @onclick="SignOut" Icon="@(new Icons.Regular.Size20.LockClosed())" IconColor="Color.Accent">Logout</FluentNavLink>
                </Authorized>
                <NotAuthorized>
                    <FluentNavLink href="authentication/login" Icon="@(new Icons.Regular.Size20.LockOpen())" IconColor="Color.Accent">Login</FluentNavLink>
                </NotAuthorized>
            </AuthorizeView>

        </FluentNavMenu>
    </nav>
</div>

@code {
    private bool expanded = true;

    private void SignOut()
    {

       navigationManager.NavigateToLogin("authentication/logout");
    }
}
