// <auto-generated />
using System;
using ApiServer.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiServer.Infrastructure.Migrations
{
    [DbContext(typeof(ApiServerContext))]
    [Migration("20240809163314_update-all-db")]
    partial class updatealldb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiServer.Core.Entities.ReadingEntity", b =>
                {
                    b.Property<int>("ReadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReadId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ScaleId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ReadId");

                    b.HasIndex("ScaleId");

                    b.ToTable("ReadingEntities");
                });

            modelBuilder.Entity("ApiServer.Core.Entities.ScaleEntity", b =>
                {
                    b.Property<int>("ScaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScaleId"));

                    b.Property<bool>("IsConnected")
                        .HasColumnType("bit");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ScaleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("SingleItemWeight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ScaleId");

                    b.ToTable("ScaleEntities");
                });

            modelBuilder.Entity("ApiServer.Core.Entities.ReadingEntity", b =>
                {
                    b.HasOne("ApiServer.Core.Entities.ScaleEntity", "Scale")
                        .WithMany("Readings")
                        .HasForeignKey("ScaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scale");
                });

            modelBuilder.Entity("ApiServer.Core.Entities.ScaleEntity", b =>
                {
                    b.Navigation("Readings");
                });
#pragma warning restore 612, 618
        }
    }
}
